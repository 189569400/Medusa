from django.http import HttpResponse
from django.http import JsonResponse
from Confluence import ConfluenceMain
from Struts2 import Struts2
from Apache import ApacheMain
from Nginx import NginxMain
from Jenkins import JenkinsMain
from Cms import CmsMain
from FastJson import FastJson
from Harbor import Harbor
from Citrix import CitrixMain
from Rails import RailsMain
from Kibana import KibanaMain
from PHPStudy import PHPStudy
from Mongo import MongoMain
from OA import OaMian
from Windows import Windows
from Spring import SpringMain
from ClassCongregation import UserTable,ThreadPool,AgentHeader,UserScansWebsiteTable
import time
import json

#接收数据样式
'''
{
	"url": "www.ascotbe.com",
	"token": "1",
	"threads": 200,
	"module": "all",
	"header": "false"


}
'''

def register(request):
    if request.method == "POST":
        try:
            ReceiveData=json.loads(request.body)
            WebScanUrl=ReceiveData["url"]
            WebScanUserToken= ReceiveData["token"]
            WebScanModule = ReceiveData["module"]
            WebScanThreads = ReceiveData["threads"]
            WebScanAgentHeader = ReceiveData["header"]
            if type(WebScanThreads)==int:#判断类型
                if WebScanUserToken!=None:
                    result=UserTable().CheckUserToken(WebScanUserToken)
                    if result:
                        UserScansWebsiteTable().Write(WebScanUserToken,WebScanUrl,str(int(time.time())),WebScanModule)#写入用户关系表
                        MedusaScan(WebScanUrl,WebScanUserToken,WebScanModule,WebScanThreads,WebScanAgentHeader)#调用扫描处理函数
                        return HttpResponse(result)
                    else:
                        return JsonResponse({'message': '用户不存在~', 'code': 200, })
            else:
                return JsonResponse({'message': '类型错误！', 'code': 500, })

        except:
            return JsonResponse({'message': '请求不合法！', 'code': 500, })
    else:
        return JsonResponse({'message': '请使用Get请求', 'code': 500, })

def MedusaScan(WebScanUrl,WebScanUserToken,WebScanModule,WebScanThreads,WebScanAgentHeader):
    WebScanThreadPool =ThreadPool()#定义一个线程池
    if WebScanAgentHeader=="false":
        Values=AgentHeader().result("None")
    else:
        Values = AgentHeader().result(WebScanAgentHeader)

    if WebScan(WebScanThreadPool,WebScanUrl,Values,WebScanUserToken,WebScanModule):
        WebScanThreadPool.Start(WebScanThreads)  # 启动多线程


def WebScan(ThreadPool,Url, Values, Token,Module):
    ModName=["Struts2","Confluence","Nginx","Apache","PHPStudy","Cms","Oa","Jenkins","Harbor","Rails","Kibana","Citrix","Mongo","Spring","FastJson","Windows"]
    if Module=="all":
        Struts2.Main(ThreadPool, Url, Values, Token)  # 调用Struts2主函数
        ConfluenceMain.Main(ThreadPool, Url, Values, Token)  # 调用 Confluence主函数
        NginxMain.Main(ThreadPool, Url, Values, Token)  # 调用Nginx主函数
        ApacheMain.Main(ThreadPool, Url, Values, Token)  # 调用Apache主函数
        PHPStudy.Main(ThreadPool, Url, Values, Token) # 调用Php主函数
        CmsMain.Main(ThreadPool, Url, Values, Token)  # 调用Cms主函数
        OaMian.Main(ThreadPool, Url, Values, Token) # 调用OA主函数
        JenkinsMain.Main(ThreadPool, Url, Values, Token)  # 调用Jenkins主函数
        Harbor.Main(ThreadPool, Url, Values, Token) # 调用Harbor主函数
        RailsMain.Main(ThreadPool, Url, Values, Token) # 调用RailsMain主函数
        KibanaMain.Main(ThreadPool, Url, Values, Token)  # 调用KibanaMain主函数
        CitrixMain.Main(ThreadPool, Url, Values, Token)  # 调用CitrixMain主函数
        MongoMain.Main(ThreadPool, Url, Values, Token) # 调用MongoMain主函数
        SpringMain.Main(ThreadPool, Url, Values, Token)  # 调用SpringMain主函数
        FastJson.Main(ThreadPool, Url, Values, Token)  # 调用FastJson主函数
        Windows.Main(ThreadPool, Url, Values, Token)  # 调用Windwos主函数
        return True
    elif Module != None and Module in ModName:
        if Module == "Struts2":
            Struts2.Main(ThreadPool, Url, Values, Token)  # 调用Struts2主函数
            return True
        elif Module == "Confluence":
            ConfluenceMain.Main(ThreadPool,Url,Values,Token)# 调用 Confluence主函数
            return True
        elif Module == "Nginx":
            NginxMain.Main(ThreadPool,Url,Values,Token)#调用Nginx主函数
            return True
        elif Module == "Apache":
            ApacheMain.Main(ThreadPool, Url, Values, Token)  # 调用Apache主函数
            return True
        elif Module == "PHPStudy":
            PHPStudy.Main(ThreadPool,Url,Values,Token)# 调用Php主函数
            return True
        elif Module == "Cms":
            CmsMain.Main(ThreadPool,Url,Values,Token)# 调用Cms主函数
            return True
        elif Module=="Oa":
            OaMian.Main(ThreadPool,Url,Values,Token)# 调用OA主函数
            return True
        elif Module=="Jenkins":
            JenkinsMain.Main(ThreadPool,Url,Values,Token)  # 调用Jenkins主函数
            return True
        elif Module=="Harbor":
            Harbor.Main(ThreadPool, Url, Values, Token)# 调用Harbor主函数
            return True
        elif Module=="Rails":
            RailsMain.Main(ThreadPool,Url,Values,Token)# 调用RailsMain主函数
            return True
        elif Module=="Kibana":
            KibanaMain.Main(ThreadPool,Url,Values,Token) # 调用KibanaMain主函数
            return True
        elif Module=="Citrix":
            CitrixMain.Main(ThreadPool,Url,Values,Token)# 调用CitrixMain主函数
            return True
        elif Module == "Mongo":
            MongoMain.Main(ThreadPool,Url,Values,Token)# 调用MongoMain主函数
            return True
        elif Module == "Spring":
            SpringMain.Main(ThreadPool,Url,Values,Token)# 调用SpringMain主函数
            return True
        elif Module == "FastJson":
            FastJson.Main(ThreadPool,Url,Values,Token)# 调用FastJson主函数
            return True
        elif Module=="Windows":
            Windows.Main(ThreadPool, Url, Values, Token)  # 调用Windwos主函数
            return True
        else:
            return False
    else:
        return False